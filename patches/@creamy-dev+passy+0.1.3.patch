diff --git a/node_modules/@creamy-dev/passy/index.js b/node_modules/@creamy-dev/passy/index.js
index 5a98afc..0080bbd 100644
--- a/node_modules/@creamy-dev/passy/index.js
+++ b/node_modules/@creamy-dev/passy/index.js
@@ -1,6 +1,7 @@
 const PassProxy = require("./libs/passedWS/index.js");
 const { WebSocketServer } = require("ws"),
-  net = require("net");
+  net = require("net"),
+  dgram = require("dgram");
 
 class PassyServer {
   constructor(options) {
@@ -9,25 +10,36 @@ class PassyServer {
 
   async main() {
     const options = this.options;
-    const wss = new WebSocketServer({ port: options.originalPort });
+    this.wss = new WebSocketServer({ port: options.originalPort });
 
-    wss.on("connection", async function (ws) {
+    this.wss.on("connection", async function (ws) {
       ws.isReady = false;
 
-      const server = new net.Socket();
+      if (options.server.protocol == "TCP") {
+        const server = new net.Socket();
   
-      server.connect(options.server.port, options.server.ip, function () {
-        ws.isReady = true;
-        ws.send("Passy: Connected");
-      });
+        server.on("data", function (data) {
+          ws.send(data);
+        });
   
-      server.on("data", function (data) {
-        if (ws.isReady) ws.send(data);
-      });
+        ws.on("message", function (data) {
+          server.write(data);
+        });
+      } else {
+        const server = dgram.createSocket("udp4");
 
-      ws.on("message", function (data) {
-        if (ws.isReady) server.write(data);
-      });
+        server.on("message", function (data, rinfo) {
+          if (rinfo.ip != options.server.ip && rinfo.port != options.server.port) return;
+ 
+          ws.send(data);
+        });
+  
+        ws.on("message", function (data) {
+          server.send(data, options.server.port, options.server.ip, (err) => {
+            if (err) throw err;
+          });
+        });
+      }
     });
 
     let opts = this.options;
@@ -38,9 +50,9 @@ class PassyServer {
     delete opts.originalPort;
     delete opts.passedPort;
 
-    const proxy = new PassProxy(opts);
+    this.proxy = new PassProxy(opts);
 
-    await proxy.init();
+    await this.proxy.init();
   }
 }
 
